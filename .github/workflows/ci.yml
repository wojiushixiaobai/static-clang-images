name: CI

on:
  workflow_dispatch:
  pull_request:
    paths-ignore:
      - 'README.md'
  push:
    paths-ignore:
      - 'README.md'
    branches:
      - main
    tags:
      - "v*.*.*.*"

jobs:
  build_image:
    name: Build ${{ matrix.platform }} image
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    strategy:
      fail-fast: false
      matrix:
        platform:
          - 386
          - amd64
          - arm
          - arm64
          - loong64
          - ppc64le
          - riscv64
          - s390x

    steps:
      - uses: actions/checkout@v5

      - name: Get clang version
        id: llvm-version
        run: echo "version=$(cat llvm-version)" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        if: matrix.platform != 'amd64'
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/${{ matrix.platform }}
          load: true
          push: false
          build-args: |
            LLVM_VERSION=${{ steps.llvm-version.outputs.version }}
          tags: static-clang:latest
          outputs: type=local,dest=./binaries
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/static-clang-builder:${{ steps.llvm-version.outputs.version }}-${{ matrix.platform }}
          cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/static-clang-builder:${{ steps.llvm-version.outputs.version }}-${{ matrix.platform }},mode=max,compression=zstd,compression-level=22

      - name: Prepare Archive
        run: tar cf - -C binaries/opt --owner 0 --group 0 clang | xz -9e -T0 > binaries/static-clang-linux-${{ matrix.platform }}.tar.xz

      # TODO add some basic tests here

      - name: Upload archive
        uses: actions/upload-artifact@v4
        with:
          name: static-clang-${{ matrix.platform }}
          path: binaries/static-clang-linux-${{ matrix.platform }}.tar.xz
          if-no-files-found: error

      - name: Push image by digest
        if: github.event_name == 'push'
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/${{ matrix.platform }}
          push: true
          outputs: type=image,name=ghcr.io/${{ github.repository_owner }}/static-clang,push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        if: github.event_name == 'push'
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ matrix.platform }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    name: Merge image
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    needs:
      - build_image
    steps:
      - uses: actions/checkout@v5

      - name: Download digests
        uses: actions/download-artifact@v5
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/static-clang
          tags: |
            type=raw,value=edge
            type=pep440,pattern={{version}}
            type=pep440,pattern={{major}}.{{minor}}.{{patch}}
            type=pep440,pattern={{major}}.{{minor}}
            type=pep440,pattern={{major}}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf 'ghcr.io/${{ github.repository_owner }}/static-clang@sha256:%s ' *)

  release:
    name: Release
    if: github.ref_type == 'tag'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs:
      - build_image
    steps:
      - uses: actions/checkout@v5

      - name: Download artifacts
        uses: actions/download-artifact@v5
        with:
          path: binaries
          pattern: static-clang-*
          merge-multiple: true

      - name: Create sha256sums
        run: sha256sum *.tar.xz > sha256sums.txt
        working-directory: binaries

      - name: Display shasums
        run: cat binaries/sha256sums.txt

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: 'binaries/*'
